#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.26
#  in conjunction with Tcl version 8.6
#    Dec 12, 2019 04:33:53 AM CST  platform: Linux

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import example1_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    example1_support.set_Tk_var()
    top = Toplevel1 (root)
    example1_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel (root)
    example1_support.set_Tk_var()
    top = Toplevel1 (w)
    example1_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        font12 = "-family {DejaVu Sans} -size 10 -weight bold -slant "  \
            "roman -underline 0 -overstrike 0"
        font13 = "-family {DejaVu Sans} -size 9 -weight bold -slant "  \
            "roman -underline 0 -overstrike 0"

        top.geometry("600x450+650+150")
        top.minsize(1, 1)
        top.maxsize(1905, 1050)
        top.resizable(1, 1)
        top.title("New Toplevel")

        self.btnExit = tk.Button(top)
        self.btnExit.place(relx=0.733, rely=0.067, height=31, width=107)
        self.btnExit.configure(command=example1_support.on_btnExit)
        self.btnExit.configure(font=font12)
        self.btnExit.configure(text='''Exit''')

        self.lblStatic = tk.Label(top)
        self.lblStatic.place(relx=0.217, rely=0.244, height=29, width=186)
        self.lblStatic.configure(borderwidth="3")
        self.lblStatic.configure(font=font12)
        self.lblStatic.configure(relief="ridge")
        self.lblStatic.configure(text='''This is a static label.''')

        self.Frame1 = tk.Frame(top)
        self.Frame1.place(relx=0.133, rely=0.422, relheight=0.456
                , relwidth=0.592)
        self.Frame1.configure(relief='groove')
        self.Frame1.configure(borderwidth="2")
        self.Frame1.configure(relief="groove")

        self.Radiobutton1 = tk.Radiobutton(self.Frame1)
        self.Radiobutton1.place(relx=0.085, rely=0.146, relheight=0.102
                , relwidth=0.251)
        self.Radiobutton1.configure(anchor='w')
        self.Radiobutton1.configure(font=font13)
        self.Radiobutton1.configure(justify='left')
        self.Radiobutton1.configure(text='''Radio 1''')
        self.Radiobutton1.configure(value="1")
        self.Radiobutton1.configure(variable=example1_support.selectedButton)

        self.Radiobutton2 = tk.Radiobutton(self.Frame1)
        self.Radiobutton2.place(relx=0.085, rely=0.293, relheight=0.102
                , relwidth=0.223)
        self.Radiobutton2.configure(anchor='w')
        self.Radiobutton2.configure(font=font13)
        self.Radiobutton2.configure(justify='left')
        self.Radiobutton2.configure(text='''Radio 2''')
        self.Radiobutton2.configure(value="2")
        self.Radiobutton2.configure(variable=example1_support.selectedButton)

        self.Radiobutton3 = tk.Radiobutton(self.Frame1)
        self.Radiobutton3.place(relx=0.085, rely=0.439, relheight=0.102
                , relwidth=0.259)
        self.Radiobutton3.configure(anchor='w')
        self.Radiobutton3.configure(font=font13)
        self.Radiobutton3.configure(justify='left')
        self.Radiobutton3.configure(text='''Radio 3''')
        self.Radiobutton3.configure(value="3")
        self.Radiobutton3.configure(variable=example1_support.selectedButton)

        self.Checkbutton1 = tk.Checkbutton(self.Frame1)
        self.Checkbutton1.place(relx=0.535, rely=0.244, relheight=0.102
                , relwidth=0.29)
        self.Checkbutton1.configure(anchor='w')
        self.Checkbutton1.configure(font=font13)
        self.Checkbutton1.configure(justify='left')
        self.Checkbutton1.configure(text='''CheckBox''')
        self.Checkbutton1.configure(variable=example1_support.che49)

        self.lblDynamic = tk.Label(self.Frame1)
        self.lblDynamic.place(relx=0.056, rely=0.732, height=29, width=306)
        self.lblDynamic.configure(anchor='w')
        self.lblDynamic.configure(font=font12)
        self.lblDynamic.configure(text='''This is a dynamic label.''')

if __name__ == '__main__':
    vp_start_gui()





